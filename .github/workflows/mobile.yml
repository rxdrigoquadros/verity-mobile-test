# .github/workflows/mobile-tests.yml
name: Mobile Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '11'

jobs:
  test-android:
    name: Android Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g appium@latest
          appium driver install uiautomator2

      - name: Download Android app
        run: |
          mkdir -p apps
          wget https://github.com/webdriverio/native-demo-app/releases/download/v1.0.8/Android-NativeDemoApp-0.4.0.apk -P apps/

      - name: Setup Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          profile: Nexus 6
          avd-name: test_emulator
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: |
            # Start Appium server
            appium --log-timestamp > appium.log 2>&1 &
            sleep 10
            
            # Run tests
            npm run test:android

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-android
          path: |
            allure-report/
            screenshots/
            appium.log
          retention-days: 30

  test-ios:
    name: iOS Tests
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g appium@latest
          appium driver install xcuitest

      - name: Download iOS app
        run: |
          mkdir -p apps
          wget https://github.com/webdriverio/native-demo-app/releases/download/v1.0.8/iOS-Simulator-NativeDemoApp-0.4.0.app.zip -P apps/
          unzip apps/iOS-Simulator-NativeDemoApp-0.4.0.app.zip -d apps/

      - name: Setup iOS Simulator
        run: |
          # List available devices
          xcrun simctl list devices
          
          # Create and boot iPhone 14 simulator
          DEVICE_ID=$(xcrun simctl create "iPhone 14 Test" "iPhone 14" iOS16.4)
          xcrun simctl boot $DEVICE_ID
          
          # Wait for simulator to boot
          xcrun simctl bootstatus $DEVICE_ID

      - name: Start Appium and run tests
        run: |
          # Start Appium server
          appium --log-timestamp > appium.log 2>&1 &
          sleep 10
          
          # Run tests
          npm run test:ios

      - name: Generate Allure Report
        if: always()
        run: |
          npm install -g allure-commandline
          allure generate allure-results --clean -o allure-report

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-ios
          path: |
            allure-report/
            screenshots/
            appium.log
          retention-days: 30

  deploy-report:
    name: Deploy Report to GitHub Pages
    needs: [test-android, test-ios]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android results
        uses: actions/download-artifact@v3
        with:
          name: test-results-android
          path: android-results/

      - name: Download iOS results
        uses: actions/download-artifact@v3
        with:
          name: test-results-ios
          path: ios-results/

      - name: Merge reports
        run: |
          mkdir -p public
          cp -r android-results/allure-report/* public/ 2>/dev/null || true
          
          # Create index.html with links to both reports
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Mobile Test Reports</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  .report-link { display: block; margin: 20px 0; padding: 15px; background: #f0f0f0; text-decoration: none; color: #333; border-radius: 5px; }
                  .report-link:hover { background: #e0e0e0; }
              </style>
          </head>
          <body>
              <h1>ðŸ“± Mobile Automation Test Reports</h1>
              <a href="./index.html" class="report-link">ðŸ“Š View Allure Report</a>
              <p>Last updated: <script>document.write(new Date().toLocaleString());</script></p>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public